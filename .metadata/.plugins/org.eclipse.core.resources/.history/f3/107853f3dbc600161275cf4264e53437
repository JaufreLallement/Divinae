/**
 * 
 */
package cartes.cartes_action.cartes_apocalypse;

import java.util.ArrayList;

import origine.Origine;
import cartes.Carte;
import cartes.cartes_action.CarteAction;

/**
 * @author Lallement
 *
 */
public class CarteApocalypse extends CarteAction {
	/* ---------- Attributs ---------- */
	/**
	 * Possibilité de poser une carte apocalypse.
	 * True: une carte apocalypse peut être posée
	 * False sinon 
	 */
	private boolean etatApocalypse = false;
	
	/* ---------- Constructeurs ---------- */
	/**
	 * Constructeur par défaut
	 */
	public CarteApocalypse() {
		super();
	}

	/**
	 * Constructeur avec arguments
	 * @param {Origine} origine : origine à attribuer la carte apocalypse
	 */
	public CarteApocalypse(Origine origine) {
		super(origine);
	}
	

	/* ---------- Getters & Setters ---------- */
	/**
	 * Accesseur pour l'attribut etatApocalypse
	 * @return {boolean} etatApocalypse : retourne true si une carte apocalypse peut être posée, false sinon
	 */
	public boolean isEtatApocalypse() {
		return this.etatApocalypse;
	}

	/**
	 * Modificateur pour l'attribut etatApocalypse
	 */
	public void setEtatApocalypse() {
		this.etatApocalypse = (this.etatApocalypse) ? false : true;
	}
	
	/* ---------- Méthodes ---------- */
	
	/**
	 * Méthode déterminanty l'action à effectuer lorsqu'une carte apocalypse est utilisée
	 * calcule les points de chaque joueur, puis élimine un joueur ou détermine un gagnant
	 */
	public void determinerAction() {
		// TODO calcul des points et élimination ou détermination d'un gagnant
	}
	
	/**
	 * Méthode permettant d'obtenir toutes les cartes apocalypse
	 * @return {ArrayList<CarteApocalypse>} apocalypses : retourne un ArrayList contenant toutes les cartes apocalypse
	 */
	@Override
	public static ArrayList<Carte> getAll() {
		ArrayList<Carte> apocalypses = new ArrayList<Carte>();
		apocalypses.add(new CarteApocalypse(Origine.JOUR));
		apocalypses.add(new CarteApocalypse(Origine.NUIT));
		apocalypses.add(new CarteApocalypse(Origine.NEANT));
		apocalypses.add(new CarteApocalypse(null));
		apocalypses.add(new CarteApocalypse(null));
		return apocalypses;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		ArrayList<Carte> testApocalypse = CarteApocalypse.getAll();
		System.out.println(testApocalypse.size());
		System.out.println(testApocalypse.toString());
		for (Carte carteApocalypse : testApocalypse) {
			System.out.println(carteApocalypse.getOrigineCarte());
		}
	}

}
