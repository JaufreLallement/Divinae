/**
 * 
 */
package de;

import java.util.Random;

import cartes.divinites.Brewalen;
import cartes.divinites.Brewalen.BrewalenHolder;
import dogme.Dogme;
import origine.Origine;
import joueur.Joueur;

/**
 * @author Lallement
 * La classe De décrit les caractéristiques du dé utilisé lors du jeu Pandocreon Divinae
 * La classe De est un singleton.
 */
public class De {
	/* ---------- Attributs ---------- */
	
	/**
	 * Faces du dé
	 */
	private Face faces[] = new Face[6];
	
	/**
	 * Joueur lançant le dé.
	 */
	private Joueur lanceur = null;
	
	
	/* ---------- Constructeurs ---------- */
	/**
	 * Constructeur privé permettant de supprimer le constructeur publique par défaut
	 */
	private De() {
		for (int i = 0; i < De.getInstance().faces.length; i++) {
			if (i == 0 || i == 2) {
				this.faces[i] = new Face(Origine.JOUR);
			} else if (i == 1 || i == 3) {
				this.faces[i] = new Face(Origine.NUIT);
			} else {
				this.faces[i] = new Face(Origine.NEANT);
			}
		}
	}
	
	/* ---------- Holder ---------- */
	/**
	 * @author Lallement
	 * Classe interne privée, responsable de l'instanciation de l'instance unique du Singleton.
	 */
	private static class DeHolder {
		/**
		 * Unique instance de la classe non preinitialisee
		 */
		private final static De instance = new De();
			}
	
	/* ---------- Getters & Setters ---------- */
	/**
	 * Méthode permettant de retourner une unique instance de la classe De
	 * @return {De} instance : retourtne l'instance de la classer De
	 */
	public final static De getInstance() {
		return DeHolder.instance;
	}
	
	/** 
	 * Accesseur permettant de retourner les faces du dé.
	 * @return {Face[]} faces : retourne un tableau contenant les faces du dé.
	 */
	public Face[] getFaces() {
		return this.faces;
	}

	/**
	 * Accesseur permettant de retourner le dernier lanceur du dé
	 * @return {Joueur} lanceur : retourne le dernier lanceur
	 */
	public Joueur getLanceur() {
		return this.lanceur;
	}
	
	/**
	 * Modificateur permettant de mettre à jour le dernier lanceur
	 * @param {Joueur} lanceur : lanceur mis à jour 
	 */
	public void setLanceur(Joueur lanceur) {
		this.lanceur = lanceur;
	}
	
	/* ---------- Méthodes ---------- */

	/**
	 * Méthode simulant un lancer de dé
	 * @return {Face} face : retourne l'une des faces du dé de manière aléatoire
	 */
	public Face lancerDe() {
		Random rand = new Random();
		int numFace = rand.nextInt(6);
		return this.faces[numFace]; 
	}
	
	
	/**
	 * Méthode de tests
	 * @param {String[]} args
	 */
	public static void main(String[] args) {
		System.out.println(De.getInstance().lancerDe().toString());
	}
}
