package cartes.cartes_action.cartes_action_effet.cartes_action_dogmatiques.guides_spirituels;

import origine.Origine;
import cartes.cartes_action.cartes_action_effet.cartes_action_dogmatiques.guides_spirituels.CarteDevin.CarteDevinHolder;
import dogme.Dogme;
import effets.Effet;

/**
 * @author Lallement
 * @author alexis
 * La classe CarteExorciste decrit le comportement de la carte Exorciste
 */

public class CarteExorciste extends CarteGuideSpirituel implements Effet {

	/* ---------- Attributs ---------- */
	
	/* ---------- Constructeurs ---------- */
	/**
	 * On supprime le constructeur publique par défaut.
	 */
	private CarteExorciste() {}

	/**
	 * Constructeur avec arguments
	 * @param {Dogme[]} dogmes : dogmes a attribuer a la carte
	 */
	public CarteExorciste(Dogme[] dogmes) {
		super(Origine.JOUR, dogmes, 1);
	}
	
	/* ---------- Holder ---------- */
	/**
	 * @author Lallement
	 * Classe interne privée, responsable de l'instanciation de l'instance unique du Singleton.
	 */
	private static class CarteExorcisteHolder {
		/**
		 * Unique instance de la classe non preinitialisee
		 */
		private final static CarteExorciste instance = new CarteExorciste(new Dogme[]{Dogme.NATURE, Dogme.MYSTIQUES});
	}
	

	/* ---------- Getters & Setters ---------- */
	/**
	 * Méthode permettant de retourner une unique instance de la classe CarteExorciste
	 * @return {CarteExorciste} instance : retourtne l'instance de la classe CarteExorciste
	 */
	public final static CarteExorciste getInstance() {
		return CarteExorcisteHolder.instance;
	}
	
	/* ---------- Methodes ---------- */
	/**
	 * Implémentation de la méthode appliquerEffet
	 */
	@Override
	public void appliquerEffet() {
		// TODO application de l'effet correspondant à la classe.
	}
	
	/**
	 * Methode de tests
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	}
}
