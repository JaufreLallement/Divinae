/**
 * 
 */
package joueur;

import java.util.Random;

import strategie.StrategiePassive;
import strategie.Strategy;

/**
 * @author Lallement
 *
 */
public class JoueurVirtuel extends Joueur {
	/* ---------- Attributs ---------- */
	/**
	 * Strategie employée par le joueur virtuel
	 */
	private Strategy strategie = new StrategiePassive();
	
	/**
	 * Tableau de differents noms possibles pour les joueurs virtuels
	 */
	private static String[] noms = {"Galadriel", "Caranthir", "Manwë", "Varda", "Ulmo", "Aulë", "Yavanna", "Geralt", "Thingol"};

	/* ---------- Constructeurs ---------- */
	/**
	 * Constructeur publique par défaut supprimé pour éviter la création de joueurs virtuels 
	 * sans informations permettant l'identification.
	 */
	private JoueurVirtuel(String nom) {
		super(nom);
	}
	
	/**
	 * Constructeur avec arguments
	 * @param {Strategy} strategie : strategie que le joueur virtuel créé devra employer.
	 */
	public JoueurVirtuel(Strategy strategie, String nom) {
		super(nom);
		this.strategie = strategie;
	}
	
	/* ---------- Getters & Setters ---------- */
	/**
	 * Accesseur pour l'attribut strategie
	 * @return {Strategy} strategie : retourne la strategie employée par le joueur virtuel
	 */
	public Strategy getStrategie() {
		return strategie;
	}

	/**
	 * Modificateur pour l'attribut strategie
	 * @param {Strategy} strategie : strategie que le joueur virtuel doit employer
	 */
	public void setStrategie(Strategy strategie) {
		this.strategie = strategie;
	}
	
	/**
	 * Accesseur permettant d'obtenir un nom au hasard parmis les noms disponibles
	 * @return {String} randomNom : retourne un nom au hasard parmis this.noms
	 */
	public static String getRandomNom() {
		Random numRand = new Random();
		return JoueurVirtuel.noms[numRand.nextInt(JoueurVirtuel.noms.length)];
	}
	
	/* ---------- Méthodes ---------- */
	
	public void employerStrategie() {
		this.strategie.jouer();
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		
	}
}
